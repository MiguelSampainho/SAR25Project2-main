#!/bin/bash
# Testing WebSocket Events in Auction System

echo "===================================================="
echo "WebSocket Event Testing Guide for Auction System"
echo "===================================================="

echo -e "\nThis script will help you test the WebSocket events in your auction system,
focusing specifically on the send:bid and item:sold events that aren't showing up.\n"

echo -e "STEP 1: Start the backend and frontend servers"
echo "------------------------------------------------"
echo "1. Open two terminal windows"
echo "2. In the first terminal, start the backend:"
echo "   cd /workspaces/SAR25Project2-main/Backend"
echo "   npm start"
echo "3. In the second terminal, start the frontend:"
echo "   cd /workspaces/SAR25Project2-main"
echo "   npm start"
echo "4. Wait for both servers to start successfully"

echo -e "\nSTEP 2: Open the WebSocket Monitor"
echo "------------------------------------------------"
echo "1. Open the auction-ws-monitor.html file in a browser:"
echo "   $BROWSER /workspaces/SAR25Project2-main/auction-ws-monitor.html"
echo "2. Keep this window open throughout your testing"

echo -e "\nSTEP 3: Login and get your token"
echo "------------------------------------------------"
echo "1. Open the auction application in your browser"
echo "2. Register or login with a user account"
echo "3. Open browser developer tools (F12 or right-click > Inspect)"
echo "4. In the Console tab, run this command to see your token:"
echo "   console.log(localStorage.getItem('id_token'))"
echo "5. Copy the token that appears in the console"
echo "6. Paste the token in the JWT Token field in the WebSocket Monitor"
echo "7. Click 'Connect' in the WebSocket Monitor"

echo -e "\nSTEP 4: Test bidding functionality"
echo "------------------------------------------------"
echo "1. In the auction application, insert a new item if there are none"
echo "2. Click on an item in the table to select it"
echo "3. Note the item ID from the browser console (look for 'DEBUG - Item clicked:' message)"
echo "4. In the WebSocket Monitor, enter this item ID in the 'Item ID' field"
echo "5. Enter a bid amount higher than the current bid"
echo "6. Click 'Send Bid' in the WebSocket Monitor"
echo "7. Check if the bid event appears in the 'Bid Events' section"
echo "8. Verify the item price updates in the auction application"

echo -e "\nSTEP 5: Test Buy Now functionality"
echo "------------------------------------------------"
echo "1. In the auction application, select a different item"
echo "2. Note the item ID from the browser console"
echo "3. In the WebSocket Monitor, enter this item ID in the 'Item ID' field"
echo "4. Click 'Buy Now' in the WebSocket Monitor"
echo "5. Check if the buy now event appears in the 'Buy Now Events' section"
echo "6. Wait a few seconds and check if an 'item:sold' event appears in the 'Item Sold Events' section"
echo "7. Verify the item is marked as sold in the auction application"
echo "8. Verify the sold notification appears in the Info Board"

echo -e "\nSTEP 6: Debug common issues"
echo "------------------------------------------------"
echo "If the events still aren't showing up, check:"
echo "1. The browser console for any errors"
echo "2. The backend terminal for any errors"
echo "3. Make sure your JWT token is valid"
echo "4. Try refreshing the page and reconnecting"
echo "5. Check if the item ID you're using exists in the database"

echo -e "\nSTEP 7: Alternative testing approach"
echo "------------------------------------------------"
echo "If the WebSocket Monitor isn't working as expected:"
echo "1. In the auction application, try using the UI directly to bid and buy"
echo "2. Watch the browser console for the DEBUG messages"
echo "3. In the backend terminal, look for DEBUG messages related to bids and purchases"
echo "4. If items are updating but events aren't being received, check the socket service for event registration issues"

echo -e "\nThe most important thing to check is:"
echo "- Whether the events are being emitted from the backend"
echo "- Whether the frontend is subscribing to these events correctly"
echo "- Whether the item IDs in the events match what's in the database"

echo -e "\n===================================================="
echo "Good luck with your testing!"
echo "===================================================="
